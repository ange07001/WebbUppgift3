---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Stats">
    <h1 class="title has-text-centered is-1 mt-4">Stats</h1>
    <div class="section">
        <h2 class="has-text-centered title has-text-primary">Snake Stats</h2>
        <div class="columns is-centered">
            <div class="column is-12-mobile is-10-tablet is-8-desktop is-half-widescreen mx-3">
                <div class="box">
                    <canvas id="snake-chart"></canvas>
                </div>
                <div class="box">
                    <table class="table is-fullwidth is-hoverable">
                        <tbody>
                            <tr>
                                <th>Average Score</th>
                                <td id="snake-average-score-text" class="has-text-primary"></td>
                            </tr>
                            <tr>
                                <th>Highest Score</th>
                                <td id="snake-high-score-text" class="has-text-primary"></td>
                            </tr>
                            <tr>
                                <th>Total Food Eaten</th>
                                <td id="snake-total-food-text" class="has-text-primary"></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</Layout>

<script>
    function sum(arr: number[]){
        let sum = 0;
        for(let i = 0; i < arr.length; i++){
            sum += arr[i];
        }
        return sum
    };

    function average(arr: number[]){
        return Math.round(sum(arr)/arr.length);
    };



    let snakeScores: number[] = [];
    let snakeScoreTimes: string[] = [];
    import Chart from "chart.js/auto";
    const snakeCtx = document.querySelector(
        "#snake-chart",
    ) as HTMLCanvasElement;

    const snakeDataStr = localStorage.getItem("snakeData");
    if (snakeDataStr !== null) {
        const snakeDataObj = JSON.parse(snakeDataStr);
        snakeScores = snakeDataObj.scores;
        snakeScoreTimes = snakeDataObj.scoreTimes;
    } else {
        snakeScores = [];
        snakeScoreTimes = [];
    }

    const latestSnakeScores = snakeScores.slice(-20);
    const latestSnakeScoreTimes = snakeScoreTimes.slice(-20);

    const gridColor = getComputedStyle(document.body).color;
    const gridColorLowOpacity = gridColor
        .replace("rgb(", "rgba(")
        .replace(")", ", 0.2)");

    new Chart(snakeCtx, {
        type: "line",
        data: {
            labels: latestSnakeScoreTimes,
            datasets: [
                {
                    label: "Latest scores on snake",
                    data: latestSnakeScores,
                    borderWidth: 2,
                    borderColor: "red",
                    backgroundColor: "rgba(255, 0, 0, 0.5)",
                },
            ],
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                    grid: {
                        color: gridColorLowOpacity,
                    },
                },
                x: {
                    grid: {
                        color: gridColorLowOpacity,
                    },
                },
            },
        },
    });

    const snakeAverageScoreText = document.querySelector("#snake-average-score-text")!;
    const snakeHighScoreText = document.querySelector("#snake-high-score-text")!;
    const snakeTotalFoodText = document.querySelector("#snake-total-food-text")!;
    snakeAverageScoreText.textContent = average(snakeScores).toString();
    snakeHighScoreText.textContent = Math.max(...snakeScores).toString();
    snakeTotalFoodText.textContent = sum(snakeScores).toString();
</script>
